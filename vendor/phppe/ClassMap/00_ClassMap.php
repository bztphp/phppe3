<?php
/**
 *  PHP Portal Engine v3.0.0
 *  https://github.com/bztphp/phppe3/
 *
 *  Copyright LGPL 2015 bzt
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published
 *  by the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *   <http://www.gnu.org/licenses/>
 *
 * @file vendor/phppe/ClassMap/00_ClassMap.php
 * @author bzt@phppe.org
 * @date 1 Jan 2015
 * @brief Compositor and PSR/4 compliant classmap based class auto loader.
 */
namespace PHPPE;
use PHPPE\Core as PHPPE;

/**
 * Main class
 *
 * @usage $gpio=GPIO::mode(3,"out")->mode(4,"in"); $gpio->write(3,true);
 */
class ClassMap
{
    static private $self;

/**
 * Register GPIO
 *
 * @param cfg not used
 */
    function init($cfg) {
        PHPPE::lib("ClassMap","Class auto loader");
        self::$self=$this;
        return true;
    }

/**
 * Diagnostics hook
 * Generate classmap for autoload
 *
 * @param  group
 */
    public function diag($group)
    {
        $D=[]; $R=[];
        foreach(["*/*","*/*/*","*/*/*/*","*/*/*/*/*","*/*/*/*/*/*"] as$v) {$D+=array_fill_keys(@glob("vendor/".$v.".php"),0); $D+=array_fill_keys(@glob("app/".$v.".php"),0); }
        foreach($D as $fn=>$v) {
            if(strpos(strtolower($fn),"autoload")!==false||strpos(strtolower($fn),"00_classmap")!==false) continue;
            $data=str_replace("\n{","{",preg_replace("|//[^\n]*$|ims","",preg_replace("|/\*.+?\*/|ims","",preg_replace("|/'.+?'|ims","",preg_replace("|/\".+?\"|ims","",file_get_contents($fn))))));
            if(preg_match_all("/(namespace|class)[\ \t]+([^\ ;{\[\(\]\)\$]+)/ims",$data,$m,PREG_SET_ORDER)) {
                $ns="";
                foreach($m as $V) {
                    if(strtolower($V[1])=="namespace") $ns=trim($V[2]);
                    if(strtolower($V[1])=="class" && ctype_alpha(trim($V[2])[0])) $R[$ns.($ns?"\\":"").trim($V[2])]=$fn;
                }
            }
        }
        ksort($R);
        $ret="<"."?php\n/**
 *  PHP Portal Engine v3.0.0
 *  http://phppe.org/
 *
 *  Copyright LGPL 2015 bzt
 *
 * @file vendor/autoload.php
 * @date ".@date("r",PHPPE::$core->now)."
 * @brief This file was generated by PHPPE ClassMap AutoLoader.
 * @regenerate php public/index.php --diag\n */\nspl_autoload_register(function(\$c){\$m=[\n";
        foreach($R as $k=>$v)
            $ret.="  \"".$k."\" => \"".addslashes($v)."\",\n";
        $ret.="];if(!empty(\$m[\$c]) && file_exists(\$m[\$c])) include(\$m[\$c]);"./*\nelse\n  \\PHPPE\Core::\$core->log('E','Unable to load class: '.\$class,'autoloader');*/"});\n";
        @unlink("vendor/autoload.php");
        i( "vendor/autoload.php",  $ret, $group, true );
    }
}
